name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.4'  # Specify the Python version you are using

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install black flake8

    - name: Check code formatting with Black
      run: |
        source venv/bin/activate
        black --check .

    - name: Lint with flake8
      run: |
        source venv/bin/activate 
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests
      run: |
        source venv/bin/activate
        python -m pip install -r requirements.txt
        python -m pytest
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/llmops:latest .
        docker tag ${{ secrets.DOCKER_USERNAME }}/llmops:latest ${{ secrets.DOCKER_USERNAME }}/llmops:latest
    
    - name: Push Docker image with retry
      run: |
        for i in 1 2 3; do
          docker push ${{ secrets.DOCKER_USERNAME }}/llmops:latest && s=0 && break || s=$? && sleep 15;
        done; (exit $s)